name: Java CI (Maven + Docker)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write   # needed to push to GHCR (docker job); harmless if unused

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  MAVEN_OPTS: -Xmx1g -XX:+TieredCompilation -XX:TieredStopAtLevel=1
  JAVA_VERSION: '17'
  DOCKER_IMAGE: ghcr.io/${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: temurin
          cache: maven

      - name: Validate and build (tests on)
        run: |
          mvn -B -ntp -U \
            -DskipITs=true \
            clean verify

      - name: Upload JARs
        uses: actions/upload-artifact@v4
        with:
          name: jars-${{ github.run_number }}-${{ github.sha }}
          path: |
            **/target/*.jar
          if-no-files-found: warn
          retention-days: 7

      - name: Upload test reports (Surefire/FailSafe)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports-${{ github.run_number }}-${{ github.sha }}
          path: |
            **/target/surefire-reports/**
            **/target/failsafe-reports/**
          if-no-files-found: ignore
          retention-days: 7

      - name: Submit dependency graph (Dependabot)
        if: ${{ github.event_name != 'pull_request' }}
        uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

  docker:
    name: Build & (optionally) push Docker image
    runs-on: ubuntu-latest
    needs: build
    if: ${{ hashFiles('Dockerfile') != '' }}  # only run if Dockerfile exists
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU (multi-arch, optional)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build image; push on main, skip push on PRs
      - name: Build Docker image (no push on PRs)
        if: ${{ github.event_name == 'pull_request' }}
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: ${{ env.DOCKER_IMAGE }}:pr-${{ github.event.number }}

      - name: Build & Push Docker image (main)
        if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE }}:latest
            ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
          labels: |
            org.opencontainers.image.source=${{ github.repositoryUrl }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ github.event.head_commit.timestamp || github.run_id }}
